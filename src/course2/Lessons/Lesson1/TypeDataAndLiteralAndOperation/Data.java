package course2.Lessons.Lesson1.TypeDataAndLiteralAndOperation;

public class Data
{
    byte b = 1, b1 = 1 + 2;
    final byte B = 1 + 2;

    public void set1()
    {
    //b = b1 + 1; // ошибка приведения типов int в byte
    /*
        переменная b1 на момент выполнения кода "b = b1 + 1;" может измениться
        и выражение "b1 + 1;" может привысить допустимый размер типа byte
     */
        b = (byte)(b1 +1);
        b = B + 1; //работает
    /*
       B - константа, ее значение определено, компилятор вычисляет значение "B + 1" и
       если его размер не привышает допустимого для типа byte, то ошибка не возникает
     */
        //b = -b; //ошибка приведения типов
        b = (byte) -b;
        //b = +b; //ошибка приведения типов
        b = (byte) +b;
        int i = 3;
        //b = i //ошибка приведения типов, int больше, чем byte
        b = (byte) i;
        final int D = 3;
        b = D; //работает
    /*
       D - константа. Компилятор проверяет не превышает ли ее значение допустимый размер
       типа byte и если его размер не привышает, то ошибка не возникает
     */
        final int D2 = 129;
        //b = D2; //ошибка приведения типов, т.к. 129 больше допустимого 127
        b = (byte) D2;//работает

        b += i++; //работает
        b += 1000; //работает
        b1 *= 2; //работает
        float f = 1.1f;
        b /= f; //работает

        /*
            все сокращенные операторы автоматически преобразуют результат вычисления
            к типу переменной, которой присваивается это значение.
            Например: b /= f; равносильно b = (byte)(b / f);
         */
    }


}
